---
- hosts: jenkins
  sudo: yes
  vars_files:
    - vars/main.yml
  vars:
    magento_domain: "{{ lookup('env', 'magento_domain')|default(default_magento_domain, true) }}"
    magento_composer_username: "{{ lookup('env', 'magento_composer_username')|default(default_magento_composer_username, true) }}"
    magento_composer_password: "{{ lookup('env', 'magento_composer_password')|default(default_magento_composer_password, true) }}"
    jenkins_url: "{{ lookup('env', 'jenkins_url')|default(default_jenkins_url, true) }}"
    jenkins_username: "{{ lookup('env', 'jenkins_username')|default(default_jenkins_username, true) }}"
    jenkins_password: "{{ lookup('env', 'jenkins_password')|default(default_jenkins_password, true) }}"

  roles:
    - geerlingguy.git
    - geerlingguy.ntp
    - geerlingguy.nginx
    - geerlingguy.php
    - geerlingguy.java
    - geerlingguy.composer
    - geerlingguy.mysql

  tasks:

    - name: create the magento composer auth file
      template:
        src: templates/root/.composer/auth.json.j2
        dest: "{{ composer_home_path }}/auth.json"
        owner: "{{ composer_home_owner }}"
        group: "{{ composer_home_group }}"

    - name: create empty mysql database
      mysql_db:
        name: "{{ magento_db_name }}"
        state: present

    - name: create mysql user
      mysql_user:
        name: "{{ magento_db_user }}"
        password: "{{ magento_db_pass }}"
        priv: "{{ magento_db_name }}.*:ALL"
        state: present

    - name: create web folder
      file:
        state: directory
        path: "{{ magento_web_root }}/pub"
        mode: 0755

    - name: get the swarm JAR
      get_url:
        url: "{{ jenkins_url }}/swarm/swarm-client.jar"
        dest: /tmp/swarm-client.jar
        mode: 0555

    - name: associate machine with jenkins
      shell: "nohup java -jar /tmp/swarm-client.jar -master '{{ jenkins_url }}' -username '{{ jenkins_username }}' -password {{ jenkins_password }} -name {{ ansible_hostname }} -labels testMachine -fsroot {{ magento_web_root }} -executors 1  &"

    - name: configure nginx
      template:
        src: templates/etc/nginx/conf.d/magento.conf.j2
        dest: /etc/nginx/conf.d/magento2.conf

    - name: update hosts
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 {{ magento_domain }}"

    - name: create a test file to ensure the web requests are working
      shell: "cat '<?php echo \'hello\'; ' > {{ magento_web_root }}/pub/index.php"
